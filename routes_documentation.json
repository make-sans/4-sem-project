{
  "table_headers": ["Route", "Headers", "Body", "Responses", "Description"],
  "items": [
    {
      "route": "/api/accounts",
      "method": "GET",
      "headers": {
        "Authorization": "admin token"
      },
      "responses": {
        "200": "Returns all accounts saved in the database",
        "401": "Not authenticated",
        "500": "Any other server error accompanied with an error message in the response body"
      },
      "description": "Returns all accounts saved on the database."
    },
    {
      "route": "/api/register",
      "method": "POST",
      "body": {
        "type": "application/json",
        "fields": {
          "username (string)": "The username of the account",
          "email (string)": "The email of the new account",
          "password (string)": "The plaintext password for the new account",
          "password2 (string)": "A repeated instance of the password field. Must be the same"
        },
        "example": {
          "username": "Federlizer",
          "email": "mail@mail.com",
          "password": "12345",
          "password2": "12345"
        }
      },
      "responses": {
        "200": "Returns 'success: true' json object. This means that the user was successfuly registered",
        "400": "One or more of the required fields is missing or incorrectly formatted",
        "409": "Email is already being used by another account"
      },
      "description": "Tries to register a new accout."
    },
    {
      "route": "/api/auth",
      "method": "POST",
      "body": {
        "type": "application/json",
        "fields": {
          "email (string)": "The email of an existing account",
          "password (string)": "The password for the account"
        },
        "example": {
          "email": "mail@mail.com",
          "password": "12345"
        }
      },
      "responses": {
        "200": "Authentication successful. JWT is sent with the respective account information",
        "400": "One or more of the required fields is missing or incorrectly formatted",
        "401": "Email or password is incorrect"
      },
      "description": "Tries to authenticate an account and sends back a token if authentication is successful."
    },
    {
      "route": "/api/auth/user",
      "method": "GET",
      "headers": {
        "Authorization": "personal token"
      },
      "responses": {
        "200": "Returns a JSON object with account information EXCEPT the password",
        "401": "Not authenticated"
      },
      "description": "Checks the token sent with the request and returns the account info EXCLUDING the password or the password hash."
    }
  ]
}